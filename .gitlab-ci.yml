stages:
  - build

.template_build_PETSC: &template_build_PETSC
    - export PETSC_DIR=$CI_PROJECT_DIR/$PETSC_DIR
    - echo "Installing Petsc in ${PETSC_DIR}/${PETSC_ARCH}"
    - misc/build_dependencies.sh "${PETSC_DIR}" "${PETSC_ARCH}" "${PETSC_PRECISION}" "${PETSC_DEBUGGING}" "${PETSC_64_INTEGERS}"
    - cd $CI_PROJECT_DIR

# Build Stage
.build:default:
  stage: build
  script:
    - if [ ! -z "$MODULES" ]; then module load $MODULES || exit 1; module list; fi
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DCTEST_MPIRUN_FLAGS="$MPIRUN_FLAGS" -DMPIEXEC="$MPIEXEC" ${CMAKE_OPTS} .. || exit 1
    - make all -j || exit 2
    - CMD="ctest $CTEST_ARGS"
    - echo $CMD && $CMD || exit 3
  variables:
    CTEST_ARGS: "-V -E 'boxmc|LUT'"
    BUILD_TYPE: RELEASE
    MPIEXEC: "mpirun"
    MPIRUN_FLAGS: '' #--allow-run-as-root;-A;bm0974;-p;shared
    CMAKE_OPTS: ''
    CC: mpicc
    FC: mpif90
    CXX: mpicxx

build:docker:ubuntu-latest:
  extends: .build:default
  image: ubuntu:latest
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt-get -qq update
    - DEBIAN_FRONTEND=noninteractive apt-get -qq install -fy build-essential cmake gfortran git libhdf5-mpi-dev libnetcdf-dev libnetcdff-dev libopenblas-dev libopenmpi-dev m4 openmpi-bin python curl
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: '-E boxmc|LUT|test_pprts_symmetry|test_rrtm_lw_Bsrfc|test_rrtm_lw_sw|test_plexrt_fish|test_plexrt_rrtmg_lw_sw|test_pprts_absorption_by_coeff_divergence'
    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
    PETSC_DIR: petsc
    PETSC_ARCH: default
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1
    BUILD_TYPE: DEBUG

build:docker:ubuntu-rolling:
  extends: .build:default
  image: ubuntu:rolling
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt-get -qq update
    - DEBIAN_FRONTEND=noninteractive apt-get -qq install -fy build-essential cmake gfortran git libhdf5-mpi-dev libnetcdf-dev libnetcdff-dev libopenblas-dev libopenmpi-dev m4 openmpi-bin python curl
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: '-E boxmc|LUT|test_pprts_symmetry|test_rrtm_lw_Bsrfc|test_rrtm_lw_sw|test_plexrt_fish|test_plexrt_rrtmg_lw_sw|test_pprts_absorption_by_coeff_divergence'
    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
    PETSC_DIR: petsc
    PETSC_ARCH: default
    PETSC_PRECISION: single
    PETSC_64_INTEGERS: 1
    PETSC_DEBUGGING: 1
    BUILD_TYPE: DEBUG
    CMAKE_OPTS: '-DCMAKE_Fortran_FLAGS="--std=legacy"'


build:docker:intel:
  extends: .build:default
  image: intel/oneapi-hpckit
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -qq install -fy cmake git m4 python curl
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: '-E boxmc|LUT|test_pprts_symmetry|test_rrtm_lw_Bsrfc|test_rrtm_lw_sw|test_plexrt_fish|test_plexrt_rrtmg_lw_sw|test_pprts_absorption_by_coeff_divergence'
    PETSC_DIR: petsc
    PETSC_ARCH: default
    PETSC_PRECISION: single
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1
    BUILD_TYPE: DEBUG
    CC: mpiicc
    FC: mpiifort
    CXX: mpiicpc

# MIM runs
.build:mim:default:
  extends: .build:default
  before_script:
    - mkdir -p $CI_PROJECT_DIR/LUT; cp -rsn /project/meteo/homepages/Fabian.Jakub/TenstreamLUT/* $CI_PROJECT_DIR/LUT/
  tags:
    - slurm.meteo.physik.lmu.de
  variables:
    LUT_BASENAME: "$CI_PROJECT_DIR/LUT/LUT"
    SRUN_OPTIONS: "--time 02:00:00 --mem 4G -n 9"
    MPIEXEC: "srun"
    MPIRUN_FLAGS: '--mpi=pmix'
    CTEST_ARGS: '-V -E boxmc|LUT'

# GCC
build:mim:gcc:single:
  extends: .build:mim:default
  variables:
    MODULES: "petsc/single-gcc-9"

build:mim:gcc:debug:
  extends: .build:mim:default
  variables:
    MODULES: "petsc/debug-gcc-9"
    BUILD_TYPE: DEBUG
