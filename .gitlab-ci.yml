stages:
  - pre
  - build_docker
  - build_mim

check_fprettify:pre:
  stage: pre
  image: alpine
  tags:
    - docker.meteo.physik.lmu.de
  before_script:
    - apk update && apk add bash git python3
  script:
    - echo "Checking that code base adheres to our code formatting standards"
    - echo "In case it doesnt, please run maint/fprettify.sh before you commit"
    - maint/fprettify.sh -d


.template_build_PETSC: &template_build_PETSC
    - export PETSC_DIR=$(readlink -f $PETSC_DIR)
    - echo -e "\e[0Ksection_start:`date +%s`:petsc[collapsed=true]\r\e[0KBuild PETSc"
    - misc/build_dependencies.sh "${PETSC_DIR}" "${PETSC_ARCH}" "${PETSC_PRECISION}" "${PETSC_DEBUGGING}" "${PETSC_64_INTEGERS}" "${PETSC_OPTS}"
    - echo -e "\e[0Ksection_end:`date +%s`:petsc\r\e[0K"

variables:
  DEBIAN_FRONTEND: noninteractive
  TEST_FILTER_WITHOUT_LUTS: 'boxmc|LUT|test_pprts_symmetry|test_rrtm_lw_Bsrfc|test_rrtm_lw_sw|test_pprts_specint|test_plexrt_fish|test_plexrt_rrtmg_lw_sw|test_pprts_absorption_by_coeff_divergence|test_plexrt_rayli'

# Build Stage
.build:default:
  script:
    - export PETSC_DIR=$(readlink -f $PETSC_DIR)
    - if [ ! -z "$MODULES" ]; then module load $MODULES || exit 1; module list; fi
    - echo -e "\e[0Ksection_start:`date +%s`:cmake[collapsed=true]\r\e[0KRun cmake"
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DCTEST_MPIRUN_FLAGS="$MPIRUN_FLAGS" -DMPIEXEC="$MPIEXEC" ${CMAKE_OPTS} .. || exit 1
    - echo -e "\e[0Ksection_end:`date +%s`:cmake\r\e[0K"
    - echo -e "\e[0Ksection_start:`date +%s`:make[collapsed=true]\r\e[0KRun make"
    - make all -j || make all || exit 2
    - echo -e "\e[0Ksection_end:`date +%s`:make\r\e[0K"
    - echo -e "\e[0Ksection_start:`date +%s`:test[collapsed=true]\r\e[0KRun ctest"
    - CMD="ctest --output-on-failure $CTEST_ARGS"
    - echo $CMD
    - $CMD &> >(tee $CI_PROJECT_DIR/test.log) || exit 3
    - echo -e "\e[0Ksection_end:`date +%s`:test\r\e[0K"
  retry: 2
  variables:
    PETSC_DIR: petsc
    PETSC_ARCH: default
    CTEST_ARGS: "-E 'boxmc|LUT'"
    BUILD_TYPE: RELEASE
    MPIEXEC: "mpirun"
    MPIRUN_FLAGS: '' #--allow-run-as-root;-A;bm0974;-p;shared
    CMAKE_OPTS: ''
    CC: mpicc
    FC: mpif90
    CXX: mpicxx
  artifacts:
    paths:
      - ${PETSC_DIR}/configure.log
      - ${PETSC_DIR}/include
      - ${PETSC_DIR}/default/include
      - ${PETSC_DIR}/default/lib
      - test.log

ubuntu-latest:
  stage: build_docker
  extends: .build:default
  needs: ["check_fprettify:pre"]
  image: ubuntu:latest
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
    - apt-get -qq update
    - apt-get -qq install -fy build-essential cmake gfortran git python3 openmpi-bin libopenmpi-dev libopenblas-dev curl pkg-config
    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE

ubuntu-rolling:
  stage: build_docker
  extends: .build:default
  needs: ["check_fprettify:pre"]
  image: ubuntu:rolling
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
    - apt-get -qq update
    - apt-get -qq install -fy build-essential cmake gfortran git python3 openmpi-bin libopenmpi-dev libopenblas-dev curl pkg-config libeigen3-dev
    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
    - *template_build_PETSC
  after_script:
    -  bash <(curl -s https://codecov.io/bash) || echo 'Codecov failed to upload'
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
    PETSC_PRECISION: single
    PETSC_64_INTEGERS: 1
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE
    CMAKE_OPTS: '-DENABLE_GCOV=ON -DCMAKE_Fortran_FLAGS=--std=legacy'
    CODECOV_TOKEN: "7d5206f3-f1e3-4704-8bc3-1ee443e4ee49"

# disabled because gcc image cannot apt install openmpi
#gcc_latest:gcov:
#  stage: build_docker
#  extends: .build:default
#  image: gcc:latest
#  before_script:
#    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
#    - apt-get -qq update
#    - apt-get -qq install -fy build-essential cmake git python3 openmpi-bin libopenmpi-dev libopenblas-dev curl pkg-config
#    - *template_build_PETSC
#    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
#  after_script:
#    -  bash <(curl -s https://codecov.io/bash) || echo 'Codecov failed to upload'
#  tags:
#    - docker.meteo.physik.lmu.de
#  variables:
#    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
#    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
#    PETSC_PRECISION: single
#    PETSC_64_INTEGERS: 0
#    PETSC_DEBUGGING: 0
#    BUILD_TYPE: RELEASE
#    CMAKE_OPTS: '-DCMAKE_Fortran_FLAGS=--std=legacy -DENABLE_GCOV=ON'
#    CODECOV_TOKEN: "7d5206f3-f1e3-4704-8bc3-1ee443e4ee49"

debian-testing:
  stage: build_docker
  extends: .build:default
  needs: ["check_fprettify:pre"]
  image: debian:testing
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
    - apt-get -qq update
    - apt-get -qq install -fy build-essential cmake gfortran git python3 openmpi-bin libopenmpi-dev libopenblas-dev curl pkg-config
    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
    MPIRUN_FLAGS: "--allow-run-as-root;--oversubscribe"
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 1
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE
    CMAKE_OPTS: '-DCMAKE_Fortran_FLAGS=--std=legacy'


intel-icc:
  stage: build_docker
  extends: .build:default
  needs: ["check_fprettify:pre"]
  image: intel/oneapi-hpckit
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
    - apt-get -qq update || echo "failed apt update"
    - apt-get -qq install -fy cmake git m4 curl libcurl3-dev
    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
    PETSC_PRECISION: single
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE
    CC: mpiicc
    FC: mpiifort
    CXX: mpiicpc

intel-icx:
  stage: build_docker
  extends: .build:default
  needs: ["check_fprettify:pre"]
  image: intel/oneapi-hpckit
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
    - apt-get -qq update || echo "failed apt update"
    - apt-get -qq install -fy cmake git m4 curl libcurl3-dev
    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
    - *template_build_PETSC
  tags:
    - docker.meteo.physik.lmu.de
  variables:
    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 1
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE
    CMAKE_OPTS: '-DENABLE_PFUNIT=OFF'
    I_MPI_CC: icx
    I_MPI_FC: ifx
    I_MPI_F90: ifx
    I_MPI_CXX: icpx
    CC: mpiicc
    FC: mpiifort
    CXX: mpiicpc

#intel:debug:
#  stage: build_docker
#  extends: .build:default
#  needs: ["check_fprettify:pre"]
#  image:  intel/oneapi-hpckit:2021.4-devel-ubuntu18.04
#  #image:  intel/oneapi-hpckit:2022.1.2-devel-ubuntu18.04 # brakes petsc
#  #image:  intel/oneapi-hpckit:2022.2-devel-ubuntu20.04 # brakes petsc
#  before_script:
#    - echo -e "\e[0Ksection_start:`date +%s`:apt_install[collapsed=true]\r\e[0KInstall APT packages"
#    - apt-get -qq update && apt-get -qq install -fy cmake git m4 curl libcurl3-dev
#    - echo -e "\e[0Ksection_end:`date +%s`:apt_install\r\e[0K"
#    - *template_build_PETSC
#  tags:
#    - docker.meteo.physik.lmu.de
#  variables:
#    CTEST_ARGS: "-E ${TEST_FILTER_WITHOUT_LUTS}"
#    PETSC_PRECISION: double
#    PETSC_64_INTEGERS: 1
#    PETSC_DEBUGGING: 1
#    BUILD_TYPE: DEBUG
#    CC: mpiicc
#    FC: mpiifort
#    CXX: mpiicpc


# MIM runs
.mim:default:
  stage: build_docker
  needs: ["check_fprettify:pre"]
  extends: .build:default
  before_script:
    - mkdir -p $CI_PROJECT_DIR/LUT; cp -rsn /project/meteo/homepages/Fabian.Jakub/TenstreamLUT/* $CI_PROJECT_DIR/LUT/
    - if [ ! -z "$MODULES" ]; then module load $MODULES || exit 1; module list; fi
    - export FC=${MPIF90:-${FC:-mpif90}}; export CC=${MPICC:-${CC:-mpicc}}; export CXX=${MPICXX:-${CXX:-mpicxx}}
    - *template_build_PETSC
  tags:
    - slurm.meteo.physik.lmu.de
  variables:
    LUT_BASENAME: "$CI_PROJECT_DIR/LUT/LUT"
    SRUN_OPTIONS: "--time 04:00:00 --mem 18G -n 9"
    MPIEXEC: "srun"
    MPIRUN_FLAGS: '--mpi=pmix'
    CTEST_ARGS: '-E boxmc|LUT'
    PETSC_DIR: petsc
    PETSC_ARCH: default
    PETSC_PRECISION: single
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1
    BUILD_TYPE: RELEASE
    CC: mpicc
    FC: mpif90
    CXX: mpicxx
  artifacts:
    paths:
      - ${PETSC_DIR}/configure.log
      - ${PETSC_DIR}/include
      - ${PETSC_DIR}/default/include
      - ${PETSC_DIR}/default/lib
    expire_in: 1 day

# GCC
mim:gcc:default:
  extends: .mim:default
  variables:
    CTEST_ARGS: '-E boxmc|LUT|plexrt_fish'

mim:gcc:spack:
  extends: .mim:default
  variables:
    MODULES: "spack gcc/11.2.0 openmpi/4.1.1-gcc-11.2.0"

#mim:icc:debug:
#  extends: .mim:default
#  variables:
#    MODULES: "intel-oneapi-compilers/2021.4.0 intel-oneapi-mpi/2021.4.0-oneapi-2021.4.0"
#    BUILD_TYPE: DEBUG
#    CC: mpiicc
#    FC: mpiifort
#    CXX: mpiicpc

implicit:mim:gcc:debug:
  extends: mim:gcc:spack
  variables:
    PETSC_OPTIONS: "-solar_dir_explicit no -solar_diff_explicit no -thermal_diff_explicit no"

matshell:mim:gcc:debug:
  extends: mim:gcc:spack
  variables:
    PETSC_OPTIONS: "-solar_diff_shell -solar_diff_pc_type sor -thermal_diff_shell -thermal_diff_pc_type sor"

mim:gcc:debug:
  extends: mim:gcc:spack
  variables:
    BUILD_TYPE: DEBUG
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 1

explicit:mim:gcc:debug:
  extends: mim:gcc:debug
  variables:
    PETSC_OPTIONS: "-solar_dir_explicit -solar_diff_explicit -thermal_diff_explicit -thermal_diff_pc_sor_omega .5 -solar_diff_pc_sor_omega .5"

mim:gcc:spack:latest:
  extends: mim:gcc:spack
  variables:
    MODULES: "spack/2023.02 gcc/11.3.0 openmpi/4.1.4-gcc-11.3.0-cuda11.7"
